<tal:master define="level options/level | python:0;
                    children options/children | nothing;
                    bottomLevel options/bottomLevel | nothing"
            i18n:domain="plone">

<metal:main define-macro="nav_main">
<tal:navitem repeat="node children">
<li tal:define="show_children   node/show_children;
                children        node/children;
                item_url        node/getURL;
                item_remote_url node/getRemoteUrl;
                use_remote_url  node/useRemoteUrl | nothing;
                item_type       node/portal_type;
                hasImage        node/item/getIcon;
                imageBase       node/path;
                is_current      node/currentItem;
                is_in_path      node/currentParent;
                li_class        python:' navTreeCurrentNode' if is_current else '';
                li_extr_class   python:' navTreeItemInPath' if is_in_path else '';
                li_folder_class python:' navTreeFolderish' if show_children else '';
                normalizeString nocall: context/plone_utils/normalizeString"
    tal:condition="python:bottomLevel &lt;= 0 or level &lt;= bottomLevel"
    tal:attributes="class string:navTreeItem visualNoMarker${li_class}${li_extr_class}${li_folder_class} section-${node/normalized_id}">

    <tal:level define="item_class string:state-${node/normalized_review_state};
                       item_type_class python:'contenttype-%s' % normalizeString(item_type);
                       item_class python:'%s navTreeCurrentItem' % item_class if is_current else item_class">

        <a tal:attributes="href  python:item_remote_url if use_remote_url else item_url;
                           title node/Description;
                           class string:${item_class}${li_class}${li_extr_class}${li_folder_class} ${item_type_class}">
            <img class="image-icon"
                tal:define="portal_url context/@@plone_portal_state/portal_url;
                            icon_url string:${portal_url}/${imageBase}/@@images/image/icon"
                tal:condition="hasImage"
                tal:attributes="src icon_url;
                                alt node/Description">
            <span tal:replace="node/Title">Selected Item Title</span>
        </a>

        <tal:children condition="children">
            <ul tal:attributes="class python:'navTree navTreeLevel%s' % level"
                tal:condition="python: children and show_children and bottomLevel and level < bottomLevel">
                <span tal:replace="structure python:view.recurse(children=children, level=level+1, bottomLevel=bottomLevel)" />
            </ul>
        </tal:children>

    </tal:level>
</li>
</tal:navitem>
</metal:main>
</tal:master>
